{"ast":null,"code":"var _jsxFileName = \"/Users/yinglu/Desktop/portfolio/src/components/contactPage/form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Col, Form, Row } from 'react-bootstrap';\nimport emailjs from \"@emailjs/browser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FormFunctionality() {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [state, setState] = useState({});\n  const [formStatus, setFormStatus] = useState(\"\");\n\n  const handleChange = e => {\n    const {\n      name,\n      email,\n      message,\n      value\n    } = e.target;\n    setState(prevState => ({ ...prevState,\n      [name]: value,\n      [email]: value,\n      [message]: value\n    }));\n  };\n\n  const clearState = () => setState({\n    name: '',\n    email: '',\n    message: ''\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(name, email, message);\n    const serviceId = process.env.REACT_APP_EMAILJS_SERVICE_I;\n    const templateId = process.env.REACT_APP_EMAILJS_TEMPLATE_ID;\n    const userId = process.env.REACT_APP_EMAILJS_PUBLIC_KEY;\n    emailjs.sendForm(serviceId, templateId, e.target, userId).then(result => {\n      console.log(result.text, result.status);\n      clearState();\n      setFormStatus(\"Email sent successfully!\");\n    }, error => {\n      console.log(error.text);\n      setFormStatus(`${error.text} happened`);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: true,\n          lg: \"3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"formGridName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              value: name,\n              onChange: e => setName(e.target.value),\n              placeholder: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: true,\n          lg: \"3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"formGridEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"ControlTextarea1\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Your messesage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          style: {\n            height: '110px',\n            width: \"50%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        id: \"submitForm\",\n        onClick: () => handleChange,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: statusMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FormFunctionality, \"A19GNpsCA4xqJ4gNFeraru0wcmI=\");\n\n_c = FormFunctionality;\nexport default FormFunctionality; // < Overlay target = { target.current } show = { show } placement = \"bottom\" >\n//     <div style={{\n//         position: 'absolute',\n//         color: \"#2C3639\",\n//         paddingLeft: '260px',\n//         marginTop: '15px',\n//         fontWeight: \"bold\"\n//     }}>\n//         Email was sent successfully! I will respond as a soon as I can.\n//     </div>\n//         </Overlay >\n\nvar _c;\n\n$RefreshReg$(_c, \"FormFunctionality\");","map":{"version":3,"names":["React","useState","Button","Col","Form","Row","emailjs","FormFunctionality","name","setName","email","setEmail","message","setMessage","state","setState","formStatus","setFormStatus","handleChange","e","value","target","prevState","clearState","handleSubmit","preventDefault","console","log","serviceId","process","env","REACT_APP_EMAILJS_SERVICE_I","templateId","REACT_APP_EMAILJS_TEMPLATE_ID","userId","REACT_APP_EMAILJS_PUBLIC_KEY","sendForm","then","result","text","status","error","height","width","statusMessage"],"sources":["/Users/yinglu/Desktop/portfolio/src/components/contactPage/form.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Button, Col, Form, Row} from 'react-bootstrap';\nimport emailjs from \"@emailjs/browser\"\n\nfunction FormFunctionality() {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [message, setMessage] = useState('')\n    const [state, setState] = useState({})\n    const [formStatus, setFormStatus] = useState(\"\");\n\n    const handleChange = (e) => {\n        const {name, email, message, value } = e.target\n        setState((prevState) => ({ ...prevState, [name]: value, [email]: value, [message]: value }))      \n    }\n\n    const clearState = () => setState({ \n        name: '',\n        email: '',\n        message: '',\n     })\n    \n    const handleSubmit = (e) => {\n        e.preventDefault()\n        \n        console.log(name, email, message);\n        \n        const serviceId = process.env.REACT_APP_EMAILJS_SERVICE_I\n        const templateId = process.env.REACT_APP_EMAILJS_TEMPLATE_ID\n        const userId = process.env.REACT_APP_EMAILJS_PUBLIC_KEY\n\n        emailjs\n            .sendForm(\n                serviceId,\n                templateId,\n                e.target,\n                userId\n        )\n            .then(\n                (result) => {\n                    console.log(result.text, result.status);\n                    clearState()\n                    setFormStatus(\"Email sent successfully!\")\n                },\n                (error) => {\n                    console.log(error.text);\n                    setFormStatus(`${error.text} happened`)\n                }\n        )\n    }\n    \n    return (\n        <div> \n        <Form onSubmit={handleSubmit}>\n            <Row className=\"mb-3\">\n                <Col md lg=\"3\">\n                    <Form.Group as={Col} controlId=\"formGridName\">\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                            placeholder=\"Full Name\" />\n                    </Form.Group>\n                </Col>\n                <Col md lg=\"3\">\n                    <Form.Group as={Col} controlId=\"formGridEmail\">\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control\n                            type=\"email\"\n   \n                            placeholder=\"Email\" />\n                    </Form.Group>\n                </Col>\n            </Row>\n\n            <Form.Group className=\"mb-3\" controlId=\"ControlTextarea1\">\n                <Form.Label>Your messesage</Form.Label>\n                <Form.Control\n                    as=\"textarea\"\n                             \n                    style={{ height: '110px', width: \"50%\" }}\n                />\n            </Form.Group>\n\n            <Button\n                type=\"submit\"\n                id=\"submitForm\"\n                onClick={() => handleChange}>\n            Submit\n            </Button>\n            </Form>\n            <p>{statusMessage}</p> \n            </div>\n    )\n}\nexport default FormFunctionality \n\n    // < Overlay target = { target.current } show = { show } placement = \"bottom\" >\n    //     <div style={{\n    //         position: 'absolute',\n    //         color: \"#2C3639\",\n    //         paddingLeft: '260px',\n    //         marginTop: '15px',\n    //         fontWeight: \"bold\"\n    //     }}>\n    //         Email was sent successfully! I will respond as a soon as I can.\n    //     </div>\n    //         </Overlay >"],"mappings":"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"},"metadata":{},"sourceType":"module"}