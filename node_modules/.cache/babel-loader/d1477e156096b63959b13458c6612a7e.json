{"ast":null,"code":"var _jsxFileName = \"/Users/yinglu/Desktop/portfolio/src/components/contactPage/form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport emailjs from \"@emailjs/browser\";\nimport { Button, Col, Form, Row } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FormFunctionality() {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [emailSent, setEmailSent] = useState(false);\n  const form = useRef();\n\n  function submitForm(e) {\n    e.preventDefault();\n\n    const submit = () => {\n      if (name && email && message) {\n        const serviceId = process.env.REACT_APP_EMAILJS_SERVICE_ID;\n        const templateId = process.env.REACT_APP_EMAILJS_TEMPLATE_ID;\n        const userId = process.env.REACT_APP_EMAILJS_PUBLIC_KEY;\n        const templateParams = {\n          name,\n          email,\n          message\n        };\n        emailjs.send(serviceId, templateId, templateParams, userId).then(response => console.log(response)).then(error => console.log(error));\n        setName('');\n        setEmail('');\n        setMessage('');\n        setEmailSent(true);\n      } else {\n        alert('Please fill all fields');\n      }\n    };\n\n    const isValidEmail = email => {\n      const regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return regex.test(String(email).toLowerCase());\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    ref: form,\n    onSubmit: submitForm,\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: true,\n        lg: \"3\",\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: name,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Full Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: true,\n        lg: \"3\",\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: email,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: message,\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Your messesage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"textarea\",\n        style: {\n          height: '110px',\n          width: \"50%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      onClick: submit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: emailSent ? 'visible' : null,\n      children: \"Thank you for your message, we will be in touch in no time!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FormFunctionality, \"YQMGNe8isNGCzGgdvEHsjj8pUWc=\");\n\n_c = FormFunctionality;\nexport default FormFunctionality;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormFunctionality\");","map":{"version":3,"names":["React","useRef","useState","emailjs","Button","Col","Form","Row","FormFunctionality","name","setName","email","setEmail","message","setMessage","emailSent","setEmailSent","form","submitForm","e","preventDefault","submit","serviceId","process","env","REACT_APP_EMAILJS_SERVICE_ID","templateId","REACT_APP_EMAILJS_TEMPLATE_ID","userId","REACT_APP_EMAILJS_PUBLIC_KEY","templateParams","send","then","response","console","log","error","alert","isValidEmail","regex","test","String","toLowerCase","height","width"],"sources":["/Users/yinglu/Desktop/portfolio/src/components/contactPage/form.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport emailjs from \"@emailjs/browser\"\nimport { Button, Col, Form, Row } from 'react-bootstrap';\n\nfunction FormFunctionality() {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [message, setMessage] = useState('');\n    const [emailSent, setEmailSent] = useState(false)\n   \n    const form = useRef();\n    \n    function submitForm(e) {\n        e.preventDefault();\n\n        \n        const submit = () => {\n            if (name && email && message) {\n                const serviceId = process.env.REACT_APP_EMAILJS_SERVICE_ID\n                const templateId = process.env.REACT_APP_EMAILJS_TEMPLATE_ID\n                const userId = process.env.REACT_APP_EMAILJS_PUBLIC_KEY\n                \n                const templateParams = {\n                    name,\n                    email,\n                    message\n                }\n\n                emailjs.send(serviceId, templateId, templateParams, userId)\n                    .then(response => console.log(response))\n                    .then(error => console.log(error))\n                \n                setName('')\n                setEmail('')\n                setMessage('')\n                setEmailSent(true)\n\n            } else {\n                alert('Please fill all fields')\n            \n        }\n    }\n\n        const isValidEmail = email => {\n            const regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n            return regex.test(String(email).toLowerCase());\n        };\n    }\n        \n    return (\n        <Form ref={form} onSubmit={submitForm}>\n            <Row className=\"mb-3\">\n                <Col md lg=\"3\">\n                    <Form.Group as={Col} controlId={name}>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Full Name\" />\n                    </Form.Group>\n                </Col>\n                <Col md lg=\"3\">\n                    <Form.Group as={Col} controlId={email}>\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"Email\" />\n                    </Form.Group>\n                </Col>\n            </Row>\n\n            <Form.Group className=\"mb-3\" controlId={message}>\n                <Form.Label>Your messesage</Form.Label>\n                <Form.Control as=\"textarea\" style={{ height: '110px', width: \"50%\" }}\n                />\n            </Form.Group>\n\n            <Button\n                type=\"submit\"\n                onClick={submit}\n            >\n            \n            </Button>\n            <span className={emailSent ? 'visible' : null}>Thank you for your message, we will be in touch in no time!</span>\n\n        </Form>\n)\n}\nexport default FormFunctionality "],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,IAAtB,EAA4BC,GAA5B,QAAuC,iBAAvC;;;AAEA,SAASC,iBAAT,GAA6B;EAAA;;EACzB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,KAAD,CAA1C;EAEA,MAAMe,IAAI,GAAGhB,MAAM,EAAnB;;EAEA,SAASiB,UAAT,CAAoBC,CAApB,EAAuB;IACnBA,CAAC,CAACC,cAAF;;IAGA,MAAMC,MAAM,GAAG,MAAM;MACjB,IAAIZ,IAAI,IAAIE,KAAR,IAAiBE,OAArB,EAA8B;QAC1B,MAAMS,SAAS,GAAGC,OAAO,CAACC,GAAR,CAAYC,4BAA9B;QACA,MAAMC,UAAU,GAAGH,OAAO,CAACC,GAAR,CAAYG,6BAA/B;QACA,MAAMC,MAAM,GAAGL,OAAO,CAACC,GAAR,CAAYK,4BAA3B;QAEA,MAAMC,cAAc,GAAG;UACnBrB,IADmB;UAEnBE,KAFmB;UAGnBE;QAHmB,CAAvB;QAMAV,OAAO,CAAC4B,IAAR,CAAaT,SAAb,EAAwBI,UAAxB,EAAoCI,cAApC,EAAoDF,MAApD,EACKI,IADL,CACUC,QAAQ,IAAIC,OAAO,CAACC,GAAR,CAAYF,QAAZ,CADtB,EAEKD,IAFL,CAEUI,KAAK,IAAIF,OAAO,CAACC,GAAR,CAAYC,KAAZ,CAFnB;QAIA1B,OAAO,CAAC,EAAD,CAAP;QACAE,QAAQ,CAAC,EAAD,CAAR;QACAE,UAAU,CAAC,EAAD,CAAV;QACAE,YAAY,CAAC,IAAD,CAAZ;MAEH,CApBD,MAoBO;QACHqB,KAAK,CAAC,wBAAD,CAAL;MAEP;IACJ,CAzBG;;IA2BA,MAAMC,YAAY,GAAG3B,KAAK,IAAI;MAC1B,MAAM4B,KAAK,GAAG,yJAAd;MACA,OAAOA,KAAK,CAACC,IAAN,CAAWC,MAAM,CAAC9B,KAAD,CAAN,CAAc+B,WAAd,EAAX,CAAP;IACH,CAHD;EAIH;;EAED,oBACI,QAAC,IAAD;IAAM,GAAG,EAAEzB,IAAX;IAAiB,QAAQ,EAAEC,UAA3B;IAAA,wBACI,QAAC,GAAD;MAAK,SAAS,EAAC,MAAf;MAAA,wBACI,QAAC,GAAD;QAAK,EAAE,MAAP;QAAQ,EAAE,EAAC,GAAX;QAAA,uBACI,QAAC,IAAD,CAAM,KAAN;UAAY,EAAE,EAAEb,GAAhB;UAAqB,SAAS,EAAEI,IAAhC;UAAA,wBACI,QAAC,IAAD,CAAM,KAAN;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI,QAAC,IAAD,CAAM,OAAN;YAAc,IAAI,EAAC,MAAnB;YAA0B,WAAW,EAAC;UAAtC;YAAA;YAAA;YAAA;UAAA,QAFJ;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,eAOI,QAAC,GAAD;QAAK,EAAE,MAAP;QAAQ,EAAE,EAAC,GAAX;QAAA,uBACI,QAAC,IAAD,CAAM,KAAN;UAAY,EAAE,EAAEJ,GAAhB;UAAqB,SAAS,EAAEM,KAAhC;UAAA,wBACI,QAAC,IAAD,CAAM,KAAN;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI,QAAC,IAAD,CAAM,OAAN;YAAc,IAAI,EAAC,OAAnB;YAA2B,WAAW,EAAC;UAAvC;YAAA;YAAA;YAAA;UAAA,QAFJ;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAPJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAgBI,QAAC,IAAD,CAAM,KAAN;MAAY,SAAS,EAAC,MAAtB;MAA6B,SAAS,EAAEE,OAAxC;MAAA,wBACI,QAAC,IAAD,CAAM,KAAN;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,IAAD,CAAM,OAAN;QAAc,EAAE,EAAC,UAAjB;QAA4B,KAAK,EAAE;UAAE8B,MAAM,EAAE,OAAV;UAAmBC,KAAK,EAAE;QAA1B;MAAnC;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAhBJ,eAsBI,QAAC,MAAD;MACI,IAAI,EAAC,QADT;MAEI,OAAO,EAAEvB;IAFb;MAAA;MAAA;MAAA;IAAA,QAtBJ,eA4BI;MAAM,SAAS,EAAEN,SAAS,GAAG,SAAH,GAAe,IAAzC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QA5BJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAiCH;;GA9EQP,iB;;KAAAA,iB;AA+ET,eAAeA,iBAAf"},"metadata":{},"sourceType":"module"}