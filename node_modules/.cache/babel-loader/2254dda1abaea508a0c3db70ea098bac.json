{"ast":null,"code":"var _jsxFileName = \"/Users/yinglu/Desktop/portfolio/src/components/contactPage/form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport emailjs from \"@emailjs/browser\";\nimport { Button, Col, Form, Overlay, Row } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FormFunctionality() {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [emailSent, setEmailSent] = useState(false);\n  const [show, setShow] = useState(false);\n  const {\n    form,\n    target\n  } = useRef();\n\n  const submit = () => {\n    if (name && email && message) {\n      const serviceId = process.env.REACT_APP_EMAILJS_SERVICE_ID;\n      const templateId = process.env.REACT_APP_EMAILJS_TEMPLATE_ID;\n      const userId = process.env.REACT_APP_EMAILJS_PUBLIC_KEY;\n      const templateParams = {\n        name,\n        email,\n        message\n      };\n      emailjs.send(serviceId, templateId, templateParams, userId).then(response => console.log(response)).then(error => console.log(error));\n      setName('');\n      setEmail('');\n      setMessage('');\n      setEmailSent(true);\n    } else {\n      alert('Please fill all fields');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    ref: form,\n    onSubmit: submit,\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: true,\n        lg: \"3\",\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: name,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Full Name\",\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: true,\n        lg: \"3\",\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          as: Col,\n          controlId: email,\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            onChange: e => setEmail(e.target.value),\n            placeholder: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: message,\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Your messesage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"textarea\",\n        onChange: e => setMessage(e.target.value),\n        style: {\n          height: '110px',\n          width: \"50%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      ref: target,\n      onClick: () => setShow(!show),\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Overlay, {\n      target: target.current\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FormFunctionality, \"bPpbzaxQ87FvMN1VRNxhW7zTMu0=\");\n\n_c = FormFunctionality;\nexport default FormFunctionality; // target={target.current} show={show} placement=\"bottom\">\n// <div\n//     style={{\n//         position: 'absolute',\n//         color: 'orange',\n// }}\n// >\n//     Message sent\n// </div>\n\nvar _c;\n\n$RefreshReg$(_c, \"FormFunctionality\");","map":{"version":3,"names":["React","useRef","useState","emailjs","Button","Col","Form","Overlay","Row","FormFunctionality","name","setName","email","setEmail","message","setMessage","emailSent","setEmailSent","show","setShow","form","target","submit","serviceId","process","env","REACT_APP_EMAILJS_SERVICE_ID","templateId","REACT_APP_EMAILJS_TEMPLATE_ID","userId","REACT_APP_EMAILJS_PUBLIC_KEY","templateParams","send","then","response","console","log","error","alert","e","value","height","width","current"],"sources":["/Users/yinglu/Desktop/portfolio/src/components/contactPage/form.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\n\nimport emailjs from \"@emailjs/browser\"\nimport { Button, Col, Form, Overlay, Row } from 'react-bootstrap';\n\nfunction FormFunctionality() {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [message, setMessage] = useState('');\n    const [emailSent, setEmailSent] = useState(false)\n   \n    const [show, setShow] = useState(false)\n    const { form, target } = useRef();\n\n    const submit = () => {\n        if (name && email && message) {\n            const serviceId = process.env.REACT_APP_EMAILJS_SERVICE_ID\n            const templateId = process.env.REACT_APP_EMAILJS_TEMPLATE_ID\n            const userId = process.env.REACT_APP_EMAILJS_PUBLIC_KEY\n\n            const templateParams = {\n                name,\n                email,\n                message\n            }\n\n            emailjs.send(serviceId, templateId, templateParams, userId)\n                .then(response => console.log(response))\n                .then(error => console.log(error))\n            \n            setName('')\n            setEmail('')\n            setMessage('')\n            setEmailSent(true)\n        } else {\n            alert('Please fill all fields')  \n        }\n    }\n  \n    return (\n        <Form ref={form} onSubmit={submit}>\n            <Row className=\"mb-3\">\n                <Col md lg=\"3\">\n                    <Form.Group as={Col} controlId={name}>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Full Name\" \n                            onChange={e => setName(e.target.value)}\n                            />\n                    </Form.Group>\n                </Col>\n                <Col md lg=\"3\">\n                    <Form.Group as={Col} controlId={email}>\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control\n                            type=\"email\"\n                            onChange={e => setEmail(e.target.value)}\n                            placeholder=\"Email\" />\n                    </Form.Group>\n                </Col>\n            </Row>\n\n            <Form.Group className=\"mb-3\" controlId={message}>\n                <Form.Label>Your messesage</Form.Label>\n                <Form.Control\n                    as=\"textarea\"\n                    onChange={e => setMessage(e.target.value)}\n                    style={{ height: '110px', width: \"50%\" }}\n                />\n            </Form.Group>\n\n            <Button type=\"submit\" ref={target} onClick={() => setShow(!show)}>\n            Submit\n            </Button>\n            <Overlay target={target.current}>\n\n            </Overlay>\n        </Form>\n)\n}\nexport default FormFunctionality \n// target={target.current} show={show} placement=\"bottom\">\n                \n                // <div\n                //     style={{\n                //         position: 'absolute',\n                //         color: 'orange',\n\n                // }}\n                // >\n                //     Message sent\n                // </div>"],"mappings":"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"},"metadata":{},"sourceType":"module"}